<?php
$a["const"]["QCubed\\Codegen\\CodegenBase::PhpReservedWords"] = "QCubed\\Codegen\\CodegenBase::PHP_RESERVED_WORDS";
$a["const"]["QCubed\\Codegen\\CodegenBase::DebugMode"] = "QCubed\\Codegen\\CodegenBase::DEBUG_MODE";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Blob"] = "QCubed\\Codegen\\ControlCategoryType::BLOB";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Text"] = "QCubed\\Codegen\\ControlCategoryType::TEXT";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Char"] = "QCubed\\Codegen\\ControlCategoryType::CHAR";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Integer"] = "QCubed\\Codegen\\ControlCategoryType::INTEGER";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::DateTime"] = "QCubed\\Codegen\\ControlCategoryType::DATE_TIME";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Date"] = "QCubed\\Codegen\\ControlCategoryType::DATE";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Time"] = "QCubed\\Codegen\\ControlCategoryType::TIME";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Float"] = "QCubed\\Codegen\\ControlCategoryType::FLOAT";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Boolean"] = "QCubed\\Codegen\\ControlCategoryType::BOOLEAN";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::SingleSelect"] = "QCubed\\Codegen\\ControlCategoryType::SINGLE_SELECT";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::MultiSelect"] = "QCubed\\Codegen\\ControlCategoryType::MULTI_SELECT";
$a["const"]["QCubed\\Codegen\\ControlCategoryType::Table"] = "QCubed\\Codegen\\ControlCategoryType::TABLE";
$a["class"]['QCodegen'] = '\\QCubed\\Project\\Codegen\\CodegenBase';
$a["const"]["QCubed\\Project\\Codegen\\CodegenBase::PhpReservedWords"] = "QCubed\\Project\\Codegen\\CodegenBase::PHP_RESERVED_WORDS";
$a["const"]["QCubed\\Project\\Codegen\\CodegenBase::DebugMode"] = "QCubed\\Project\\Codegen\\CodegenBase::DEBUG_MODE";
$a["class"]['QDatabaseCodegen'] = '\\QCubed\\Codegen\\DatabaseCodegen';
$a["const"]["QCubed\\Codegen\\DatabaseCodegen::PhpReservedWords"] = "QCubed\\Codegen\\DatabaseCodegen::PHP_RESERVED_WORDS";
$a["const"]["QCubed\\Codegen\\DatabaseCodegen::DebugMode"] = "QCubed\\Codegen\\DatabaseCodegen::DEBUG_MODE";
$a["const"]["QCubed\\Codegen\\OptionFile::TableOptionsFieldName"] = "QCubed\\Codegen\\OptionFile::TABLE_OPTIONS_FIELD_NAME";
$a["class"]['QReference'] = '\\QCubed\\Codegen\\Reference';
$a["const"]["QCubed\\Codegen\\RestServiceCodegen::PhpReservedWords"] = "QCubed\\Codegen\\RestServiceCodegen::PHP_RESERVED_WORDS";
$a["const"]["QCubed\\Codegen\\RestServiceCodegen::DebugMode"] = "QCubed\\Codegen\\RestServiceCodegen::DEBUG_MODE";
$a["class"]['QDatabaseBase'] = '\\QCubed\\Database\\DatabaseBase';
$a["const"]["QCubed\\Database\\DatabaseBase::Adapter"] = "QCubed\\Database\\DatabaseBase::ADAPTER";
$a["class"]['QDatabaseException'] = '\\QCubed\\Database\\Exception\\ExceptionBase';
$a["class"]['QOptimisticLockingException'] = '\\QCubed\\Database\\Exception\\OptimisticLocking';
$a["class"]['QUndefinedPrimaryKeyException'] = '\\QCubed\\Database\\Exception\\UndefinedPrimaryKey';
$a["class"]['QDatabaseFieldBase'] = '\\QCubed\\Database\\FieldBase';
$a["const"]["QCubed\\Database\\FieldType::Blob"] = "QCubed\\Database\\FieldType::BLOB";
$a["const"]["QCubed\\Database\\FieldType::VarChar"] = "QCubed\\Database\\FieldType::VAR_CHAR";
$a["const"]["QCubed\\Database\\FieldType::Char"] = "QCubed\\Database\\FieldType::CHAR";
$a["const"]["QCubed\\Database\\FieldType::Integer"] = "QCubed\\Database\\FieldType::INTEGER";
$a["const"]["QCubed\\Database\\FieldType::DateTime"] = "QCubed\\Database\\FieldType::DATE_TIME";
$a["const"]["QCubed\\Database\\FieldType::Date"] = "QCubed\\Database\\FieldType::DATE";
$a["const"]["QCubed\\Database\\FieldType::Time"] = "QCubed\\Database\\FieldType::TIME";
$a["const"]["QCubed\\Database\\FieldType::Float"] = "QCubed\\Database\\FieldType::FLOAT";
$a["const"]["QCubed\\Database\\FieldType::Bit"] = "QCubed\\Database\\FieldType::BIT";
$a["const"]["QCubed\\Database\\FieldType::Json"] = "QCubed\\Database\\FieldType::JSON";
$a["class"]['QDatabaseForeignKey'] = '\\QCubed\\Database\\ForeignKey';
$a["class"]['QDatabaseIndex'] = '\\QCubed\\Database\\Index';
$a["class"]['QMySqliDatabase'] = '\\QCubed\\Database\\Mysqli5\\MysqliDatabase';
$a["const"]["QCubed\\Database\\Mysqli5\\MysqliDatabase::Adapter"] = "QCubed\\Database\\Mysqli5\\MysqliDatabase::ADAPTER";
$a["class"]['QMySqli5Database'] = '\\QCubed\\Database\\Mysqli5\\Database';
$a["const"]["QCubed\\Database\\Mysqli5\\Database::Adapter"] = "QCubed\\Database\\Mysqli5\\Database::ADAPTER";
$a["class"]['QMySqliDatabaseField'] = '\\QCubed\\Database\\Mysqli5\\MysqliField';
$a["class"]['QMySqli5DatabaseField'] = '\\QCubed\\Database\\Mysqli5\\Field';
$a["class"]['QMySqliDatabaseException'] = '\\QCubed\\Database\\Mysqli5\\MysqliException';
$a["class"]['QDatabaseResultBase'] = '\\QCubed\\Database\\ResultBase';
$a["class"]['QMySqliDatabaseResult'] = '\\QCubed\\Database\\Mysqli5\\MysqliResult';
$a["class"]['QDatabaseRowBase'] = '\\QCubed\\Database\\RowBase';
$a["class"]['QMySqliDatabaseRow'] = '\\QCubed\\Database\\Mysqli5\\MysqliRow';
$a["class"]['QMySqli5DatabaseResult'] = '\\QCubed\\Database\\Mysqli5\\Result';
$a["class"]['QPostgreSqlDatabase'] = '\\QCubed\\Database\\PostgreSql\\Database';
$a["const"]["QCubed\\Database\\PostgreSql\\Database::Adapter"] = "QCubed\\Database\\PostgreSql\\Database::ADAPTER";
$a["class"]['QPostgreSqlDatabaseException'] = '\\QCubed\\Database\\PostgreSql\\Exception';
$a["class"]['QPostgreSqlDatabaseField'] = '\\QCubed\\Database\\PostgreSql\\Field';
$a["class"]['QPostgreSqlDatabaseResult'] = '\\QCubed\\Database\\PostgreSql\\Result';
$a["class"]['QPostgreSqlDatabaseRow'] = '\\QCubed\\Database\\PostgreSql\\Row';
$a["class"]['QQueryBuilder'] = '\\QCubed\\Query\\Builder';
$a["class"]['QQAggregationClause'] = '\\QCubed\\Query\\Clause\\AggregationBase';
$a["class"]['QQAverage'] = '\\QCubed\\Query\\Clause\\Average';
$a["class"]['QQCount'] = '\\QCubed\\Query\\Clause\\Count';
$a["class"]['QQDistinct'] = '\\QCubed\\Query\\Clause\\Distinct';
$a["class"]['QQExpand'] = '\\QCubed\\Query\\Clause\\Expand';
$a["class"]['QQExpandAsArray'] = '\\QCubed\\Query\\Clause\\ExpandAsArray';
$a["class"]['QQExpandVirtualNode'] = '\\QCubed\\Query\\Clause\\ExpandVirtualNode';
$a["class"]['QQGroupBy'] = '\\QCubed\\Query\\Clause\\GroupBy';
$a["class"]['QQHavingClause'] = '\\QCubed\\Query\\Clause\\Having';
$a["class"]['QQLimitInfo'] = '\\QCubed\\Query\\Clause\\Limit';
$a["class"]['QQMaximum'] = '\\QCubed\\Query\\Clause\\Maximum';
$a["class"]['QQMinimum'] = '\\QCubed\\Query\\Clause\\Minimum';
$a["class"]['QQOrderBy'] = '\\QCubed\\Query\\Clause\\OrderBy';
$a["class"]['QQSum'] = '\\QCubed\\Query\\Clause\\Sum';
$a["class"]['QQCondition'] = '\\QCubed\\Query\\Condition\\ConditionBase';
$a["class"]['QQConditionAll'] = '\\QCubed\\Query\\Condition\\All';
$a["class"]['QQConditionLogical'] = '\\QCubed\\Query\\Condition\\LogicalBase';
$a["class"]['QQConditionAnd'] = '\\QCubed\\Query\\Condition\\AndCondition';
$a["class"]['QQConditionComparison'] = '\\QCubed\\Query\\Condition\\ComparisonBase';
$a["class"]['QQConditionBetween'] = '\\QCubed\\Query\\Condition\\Between';
$a["class"]['QQConditionEqual'] = '\\QCubed\\Query\\Condition\\Equal';
$a["class"]['QQConditionExists'] = '\\QCubed\\Query\\Condition\\Exists';
$a["class"]['QQConditionGreaterOrEqual'] = '\\QCubed\\Query\\Condition\\GreaterOrEqual';
$a["class"]['QQConditionGreaterThan'] = '\\QCubed\\Query\\Condition\\GreaterThan';
$a["class"]['QQConditionIn'] = '\\QCubed\\Query\\Condition\\In';
$a["class"]['QQConditionIsNotNull'] = '\\QCubed\\Query\\Condition\\IsNotNull';
$a["class"]['QQConditionIsNull'] = '\\QCubed\\Query\\Condition\\IsNull';
$a["class"]['QQConditionLessOrEqual'] = '\\QCubed\\Query\\Condition\\LessOrEqual';
$a["class"]['QQConditionLessThan'] = '\\QCubed\\Query\\Condition\\LessThan';
$a["class"]['QQConditionLike'] = '\\QCubed\\Query\\Condition\\Like';
$a["class"]['QQConditionNone'] = '\\QCubed\\Query\\Condition\\None';
$a["class"]['QQConditionNot'] = '\\QCubed\\Query\\Condition\\Not';
$a["class"]['QQConditionNotBetween'] = '\\QCubed\\Query\\Condition\\NotBetween';
$a["class"]['QQConditionNotEqual'] = '\\QCubed\\Query\\Condition\\NotEqual';
$a["class"]['QQConditionNotExists'] = '\\QCubed\\Query\\Condition\\NotExists';
$a["class"]['QQConditionNotIn'] = '\\QCubed\\Query\\Condition\\NotIn';
$a["class"]['QQConditionNotLike'] = '\\QCubed\\Query\\Condition\\NotLike';
$a["class"]['QQConditionOr'] = '\\QCubed\\Query\\Condition\\OrCondition';
$a["class"]['QQNode'] = '\\QCubed\\Query\\Node\\NodeBase';
$a["class"]['QQAssociationNode'] = '\\QCubed\\Query\\Node\\Association';
$a["class"]['QQColumnNode'] = '\\QCubed\\Query\\Node\\Column';
$a["class"]['QQSubQueryNode'] = '\\QCubed\\Query\\Node\\SubQueryBase';
$a["class"]['QQFunctionNode'] = '\\QCubed\\Query\\Node\\FunctionNode';
$a["class"]['QQMathNode'] = '\\QCubed\\Query\\Node\\Math';
$a["class"]['QQNamedValue'] = '\\QCubed\\Query\\Node\\NamedValue';
$a["const"]["QCubed\\Query\\Node\\NamedValue::DelimiterCode"] = "QCubed\\Query\\Node\\NamedValue::DELIMITER_CODE";
$a["class"]['QQNoParentNode'] = '\\QCubed\\Query\\Node\\NoParentBase';
$a["class"]['QQTableNode'] = '\\QCubed\\Query\\Node\\Table';
$a["class"]['QQReverseReferenceNode'] = '\\QCubed\\Query\\Node\\ReverseReference';
$a["class"]['QQSubQueryCountNode'] = '\\QCubed\\Query\\Node\\SubQueryCount';
$a["class"]['QQSubQuerySqlNode'] = '\\QCubed\\Query\\Node\\SubQuerySql';
$a["class"]['QQVirtualNode'] = '\\QCubed\\Query\\Node\\Virtual';
$a["class"]['QPartialQueryBuilder'] = '\\QCubed\\Query\\PartialBuilder';
$a["class"]['QQ'] = '\\QCubed\\Query\\QQ';
return $a;
